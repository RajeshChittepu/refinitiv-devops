Jenkin Job with Docker

build -> execute shell 
   sudo docker run hello-world
---------------------------------------------
First Job
New Item -> pipeline -> dockerPipelinedemo1
Pipeline -> pipeline script from SCM (declarative pipeline)
	GIT : https://github.com/puneetbhatia77/git-test.git
	Script Path : Jenkinsfile.txt

-----------------------------------------------------------------------------

Second Job
New Item -> pipeline -> dockerPipelinedemo2
Pipeline -> pipeline script from SCM (declarative pipeline)
	GIT : https://github.com/puneetbhatia77/git-test.git
	Script Path : Jenkinsfile

pipeline {
    agent any
    stages {
        stage('One') {
                steps {
                        echo 'Hi, this is Puneet from DevOps'
			
                }
        }
	    stage('Two'){
		    
		steps {
			input('Do you want to proceed?')
        }
	    }
        stage('Three') {
                when {
                        not {
                                branch "master"
                        }
                }
                steps {
			echo "Hello"
                        }
        }
        stage('Four') {
                parallel {
                        stage('Unit Test') {
                                steps{
                                        echo "Running the unit test..."
                                }
                        }
                        stage('Integration test') {
                        agent {
                                docker {                                    	# make sure docker is installed on VM and add jenkins user to docker group.
                                        reuseNode false				# sudo usermod -aG docker jenkins,    adding jenkins user to docker group
					image 'ubuntu'			        # sudo usermod -aG docker vagrant  and then restart jenkins to take effect
                                        } #reuseNode , a boolean, false by default. If true, run the container on the node specified at the top-level of the Pipeline,
			}						#      in the same workspace, rather than on a new node entirely.
				steps {
					echo 'Running the integration test..'
				}
                               
			}  }
        }
    }
}




-------------------------------------------------------------------------------
Third Job
New Item -> pipeline -> Scripted Pipeline Demo  -> dockerPipelinedemo3
Pipeline -> pipeline script

node {
      
	for (i=0; i<2; i++) { 
           
		stage "Stage #"+i
           
		print 'Hello, world !'
          
		if (i==0)
           
		{
               
			echo 'Running on Stage #0'
          
		 }
           
		else {
               
			build 'dockerPipelinedemo1'
              
			 echo 'Running on Stage #1'
           
		}
      
	}

}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Forth Job

New Item -> pipeline -> dockerPipelinedemo4
Pipeline -> pipeline script from SCM (declarative pipeline)
	GIT : https://github.com/puneetbhatia77/git-test.git
	Script Path : maven-jdk-hello

pipeline {
    agent none 
    stages {
        stage('Example Build') {
            agent { docker 'maven:3-alpine' } 
            steps {
                echo 'Hello, Maven'
                sh 'mvn --version'
            }
        }
        stage('Example Test') {
            agent { docker 'openjdk:8-jre' }     # can also be tested at terminal by tunning the command " sudo docker run -it openjdk:8-jre bash" and " java -version"
            steps {
                echo 'Hello, JDK'
                sh 'java -version'
            }
        }
    }
}







